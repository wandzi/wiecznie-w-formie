{"version":3,"sources":["webpack:///./src/components/FAQ/FAQ.js","webpack:///./src/components/FAQSite/FAQSite.js","webpack:///./src/pages/FAQ.js"],"names":["FAQ","faq","index","toggleFAQ","className","key","onClick","question","open","answer","FAQSite","useState","faqs","setFaqs","map","i","data","fixed","myPhoto","childImageSharp","Helmet","title","defer"],"mappings":"6KAeeA,G,UAZH,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAEvB,OACI,wBAAIC,UAAU,YAAYC,IAAKH,GAC3B,wBAAIE,UAAU,0BAA0BE,QAAS,kBAAMH,EAAUD,KAASD,EAAIM,UAC9E,uBAAGH,UAAW,yBAA2BH,EAAIO,KAAO,SAAW,KAC1DP,EAAIQ,W,qBC8ENC,G,UAhFC,WAAO,IAAD,EAEIC,mBAAS,CAC/B,CACEJ,SAAU,8CACVE,OAAO,8QAEPD,MAAM,GAER,CACED,SAAU,qCACVE,OAAO,qgBAIPD,MAAM,GAER,CACED,SAAU,gCACVE,OAAO,uKAEPD,MAAM,GAER,CACED,SAAU,qDACVE,OAAO,2mBAKPD,MAAM,GAER,CACED,SAAU,6DACVE,OAAO,0GACPD,MAAM,KAjCHI,EAFa,KAEPC,EAFO,KAuCdV,EAAY,SAACD,GACjBW,EAAQD,EAAKE,KAAI,SAACb,EAAKc,GAMrB,OAJEd,EAAIO,KADFO,IAAMb,IACID,EAAIO,KAIXP,OAILe,EAAI,OAaV,OACE,6BAASZ,UAAU,OACjB,wBAAIA,UAAU,eAAd,+BACA,kBAAC,IAAD,CACIa,MAAOD,EAAKE,QAAQC,gBAAgBF,MACpCb,UAAU,kBAEd,wBAAIA,UAAU,aACXQ,EAAKE,KAAI,SAACb,EAAKc,GAAN,OACR,kBAAC,EAAD,CAAKd,IAAKA,EAAKC,MAAOa,EAAGZ,UAAWA,QAGxC,uBAAGC,UAAU,aAAb,oFCtESJ,UAPH,kBACV,kBAAC,IAAD,KACE,kBAACoB,EAAA,EAAD,CAAQC,MAAM,2BAA2BC,OAAO,IAChD,kBAAC,EAAD,S","file":"component---src-pages-faq-js-2c32059f0858409e7b46.js","sourcesContent":["import React from \"react\"\r\nimport './FAQ.scss'\r\n\r\nconst FAQ = ({ faq, index, toggleFAQ }) => {\r\n\r\n    return(\r\n        <li className=\"list-item\" key={index}>\r\n            <h2 className=\"list-item__faq-question\" onClick={() => toggleFAQ(index)}>{faq.question}</h2>\r\n            <p className={\"list-item__faq-answer\" + (faq.open ? '--open' : '')}>\r\n                {faq.answer}\r\n            </p>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default FAQ\r\n","import React, { useState } from \"react\"\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport FAQ from '../FAQ/FAQ'\r\nimport Img from 'gatsby-image'\r\n\r\nimport './FAQSite.scss'\r\n\r\nconst FAQSite = () => {\r\n  \r\n  const [faqs, setFaqs] = useState([\r\n    {\r\n      question: '1. Jak przygotować się na pierwszy trening?',\r\n      answer: `Oprócz wygodnego stroju na zmianę, który nie będzie krępował ruchów (konieczne przy diagnostyce), polecam zabrać ze sobą ręcznik\r\n      (szczególnie w obecnej sytuacji epidemiologicznej), wodę oraz ładne skarpetki, bo sporą część diagnostyki przeprowadzimy bez butów.`,\r\n      open: true\r\n    },  \r\n    {\r\n      question: '2. Jak wygląda pierwsze spotkanie?',\r\n      answer: `Jeśli wcześniej został wypełniony formularz treningowy lub żywieniowy, spotkanie zaczynamy od przeanalizowania odpowiedzi. \r\n      Sprawdzamy czy coś nie zostało przeoczone i czy nie zostały pominiętejakieś ważne informacje. Pierwszy trening zawsze w dużej mierze \r\n      związany jest z diagnostyką, analizą słabych ogniw i prognozowaniem treningów na przyszłość. Dlatego na pierwszym spotkaniu dowiesz \r\n      się również w jakiej kondycji jest Twoje ciało i nad czym będziemy pracować w najbliższej przyszłości.`,\r\n      open: false\r\n    }, \r\n    {\r\n      question: '3. Co w przypadku spóźnienia?',\r\n      answer: `Jeśli nie byłem wcześniej poinformowany o możliwości spóźnienia, zastrzegam sobie prawo do skrócenia jednostki treningowej o czas, \r\n      który osoba się spóźniła.`,\r\n      open: false\r\n    }, \r\n    {\r\n      question: '4. Co w przypadku odwołania jednostki treningowej?',\r\n      answer: `Jeśli zaplanowany trening miał odbyć się w godzinach poranno-południowych (6.00-14.00) istnieje możliwość odwołania treningu do \r\n      godziny 20.00 dnia poprzedniego bez konsekwencji. Jeśli zostanę poinformowany później, zastrzegam sobie prawo do pobrania opłaty \r\n      równoznacznej z 80% kwoty odbytego treningu. W przypadku odwołania treningu w godzinach popołudniowych (14.00-22.00), poinformowanie \r\n      mnie, do 8 godzin przed treningiem, będzie wiązało się z brakiem konsekwencji. W przypadku krótszego czasu, zastrzegam sobie prawo \r\n      do pobrania opłaty równoznacznej z 80% kwoty odbytego treningu.`,\r\n      open: false\r\n    }, \r\n    {\r\n      question: '5. Czy istnieje możliwość prowadzenia treningu w plenerze?',\r\n      answer: `Oczywiście! Jak najbardziej! Z wielką przyjemnością, sam ćwiczę od czasu do czasu w plenerze i polecam!`,\r\n      open: false\r\n    }, \r\n  ])\r\n\r\n  const toggleFAQ = (index) => {\r\n    setFaqs(faqs.map((faq, i) => {\r\n      if (i === index) {\r\n        faq.open = !faq.open\r\n      } else {\r\n        faq.open = false;\r\n      }\r\n      return faq;\r\n    }))\r\n  }\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query FAQSite {\r\n        myPhoto: file(relativePath: {eq: \"2.jpg\"}) {\r\n            id\r\n            childImageSharp {\r\n              fixed {\r\n                ...GatsbyImageSharpFixed\r\n              }\r\n            }\r\n        }\r\n    }\r\n  `)\r\n\r\n  return(\r\n    <section className=\"faq\">\r\n      <h1 className=\"faq__kicker\">Czeka Cię pierwszy trening?</h1>\r\n      <Img\r\n          fixed={data.myPhoto.childImageSharp.fixed}\r\n          className=\"faq__my-photo\"\r\n      />\r\n      <ul className=\"faq__list\">\r\n        {faqs.map((faq, i) => (\r\n          <FAQ faq={faq} index={i} toggleFAQ={toggleFAQ} />\r\n        ))}\r\n      </ul>\r\n      <p className=\"faq__note\">Ta rubryczka będzie stale powiększana, wraz z zadawanymi przez Was pytaniami.</p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default FAQSite\r\n","import React from \"react\"\r\nimport { Helmet } from 'react-helmet'\r\nimport Layout from \"../components/layout\"\r\nimport FAQSite from \"../components/FAQSite/FAQSite\"\r\n\r\nconst FAQ = () => (\r\n  <Layout>\r\n    <Helmet title=\"FAQ | Wiecznie w formie!\" defer={false} />\r\n    <FAQSite />\r\n  </Layout>\r\n)\r\n\r\nexport default FAQ\r\n"],"sourceRoot":""}